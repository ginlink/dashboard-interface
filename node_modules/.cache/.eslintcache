[{"/Users/bts/Desktop/工作区/cms/defi-admin/src/index.js":"1","/Users/bts/Desktop/工作区/cms/defi-admin/src/App.js":"2","/Users/bts/Desktop/工作区/cms/defi-admin/src/reportWebVitals.js":"3","/Users/bts/Desktop/工作区/cms/defi-admin/src/layout/main/index.js":"4","/Users/bts/Desktop/工作区/cms/defi-admin/src/router/menus.js":"5","/Users/bts/Desktop/工作区/cms/defi-admin/src/views/AutomaticInvestment/AutomaticInvestment.js":"6","/Users/bts/Desktop/工作区/cms/defi-admin/src/views/investment/Investment.js":"7","/Users/bts/Desktop/工作区/cms/defi-admin/src/views/automaticInvestment/AutomaticInvestment.js":"8","/Users/bts/Desktop/工作区/cms/defi-admin/src/api/automaticInvestment.js":"9","/Users/bts/Desktop/工作区/cms/defi-admin/src/api/investment.js":"10","/Users/bts/Desktop/工作区/cms/defi-admin/src/utils/request.js":"11","/Users/bts/Desktop/工作区/cms/defi-admin/src/web3/web3.js":"12","/Users/bts/Desktop/工作区/cms/defi-admin/src/contractAPI/vaultApi.js":"13"},{"size":500,"mtime":1616156816337,"results":"14","hashOfConfig":"15"},{"size":340,"mtime":1616226866420,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1616156816337,"results":"17","hashOfConfig":"15"},{"size":2525,"mtime":1616397124205,"results":"18","hashOfConfig":"15"},{"size":492,"mtime":1616382281437,"results":"19","hashOfConfig":"15"},{"size":6187,"mtime":1616393433015,"results":"20","hashOfConfig":"15"},{"size":5235,"mtime":1616407309752,"results":"21","hashOfConfig":"15"},{"size":5929,"mtime":1616397783781,"results":"22","hashOfConfig":"15"},{"size":499,"mtime":1616393612830,"results":"23","hashOfConfig":"15"},{"size":298,"mtime":1616381898115,"results":"24","hashOfConfig":"15"},{"size":135,"mtime":1616381922017,"results":"25","hashOfConfig":"15"},{"size":581,"mtime":1616405988072,"results":"26","hashOfConfig":"15"},{"size":12863,"mtime":1616400260661,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11atgwo",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/bts/Desktop/工作区/cms/defi-admin/src/index.js",[],["58","59"],"/Users/bts/Desktop/工作区/cms/defi-admin/src/App.js",[],"/Users/bts/Desktop/工作区/cms/defi-admin/src/reportWebVitals.js",[],"/Users/bts/Desktop/工作区/cms/defi-admin/src/layout/main/index.js",["60"],"import { Link , Switch , Route , Redirect , withRouter } from \"react-router-dom\"\n\nimport React from \"react\"\nimport { Layout, Menu } from 'antd';\n\nimport \"./index.css\"\nimport menus from \"./../../router/menus\"\n\n\nconst { Content, Sider } = Layout;\n\nclass Index extends React.Component {\n    state = {\n      collapsed: false,\n      defaultSelectedKeys:[\"0-0\"]\n    };\n\n    componentWillMount(){\n      const defaultSelectedKeys = sessionStorage.getItem('defaultSelectedKeys')\n      console.log(defaultSelectedKeys)\n      if( defaultSelectedKeys ){\n        this.setState({\n          defaultSelectedKeys:[defaultSelectedKeys]\n        })\n      }\n    }\n  \n    onCollapse = collapsed => {\n      console.log(collapsed);\n      this.setState({ collapsed });\n    };\n\n  \n    render() {\n      const { collapsed } = this.state;\n      return (\n        <Layout style={{ minHeight: '100vh' }}>\n          <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\" defaultSelectedKeys={this.state.defaultSelectedKeys}>\n              {menus.map( item => (\n                (item.meta && item.meta.hidden) ? \n                null :\n                (   \n                        <Menu.Item \n                        key={item.key} \n                        icon={item.icon}\n                        onClick={()=>{\n                          sessionStorage.setItem(\"defaultSelectedKeys\", [item.key]);\n                        }}>\n                            <Link to={item.path}>\n                                {item.title}\n                            </Link>\n                        </Menu.Item>\n                )) )}\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Content style={{ margin: '0 16px' }}>\n                <Switch>\n                    {\n                        menus.map( item=>(\n                            item.redirect \n                            ? \n                            <Redirect key={item.key} path={item.path} to={item.redirect} exact></Redirect> \n                            : \n                            <Route key={item.key} exact path={item.path} component={item.component}></Route>\n                        ) )\n                    }\n                    <Redirect key=\"/\" path=\"/\"  to=\"/investment\" ></Redirect> \n                </Switch>\n            </Content>\n          </Layout>\n        </Layout>\n      );\n    }\n  }\n\n  export default withRouter( Index )","/Users/bts/Desktop/工作区/cms/defi-admin/src/router/menus.js",[],"/Users/bts/Desktop/工作区/cms/defi-admin/src/views/AutomaticInvestment/AutomaticInvestment.js",[],"/Users/bts/Desktop/工作区/cms/defi-admin/src/views/investment/Investment.js",["61","62","63","64","65","66"],"/Users/bts/Desktop/工作区/cms/defi-admin/src/views/automaticInvestment/AutomaticInvestment.js",["67","68","69","70"],"\n// 自动化投资页面\nimport { Table } from \"antd\"\nimport React , { useState , useEffect } from 'react';\nimport { Form, Row, Col, Input, Button,Select } from 'antd';\n\nimport \"./AutomaticInvestment.css\"\n\nimport {\n    getAutomaticInvestmentList ,\n    getAutomaticInvestmentScript\n} from \"./../../api/automaticInvestment\"\n\nconst { Option } = Select\n\nconst layout = {\n    layout:\"inline\",\n    labelCol: { span: 8 },\n    wrapperCol: { span: 15 , offset:0 },\n  };\n\nconst tailLayout = {\n    wrapperCol: {\n        offset: 24\n    },\n};\n\n\nconst IFrom = () => {\n    const [ theResults , setTheResults ] = useState( \"正常\" )\n    const [ runningState , setRunningState ] = useState( \"成功\" )\n\n    const onFinish = (values) => {\n        console.log('Success:', values);\n      };\n    const onTheResultsChange = (newCurrency) => {\n        console.log(1)\n        setTheResults(newCurrency)\n    }\n    const onRunningStateChange = (newCurrency) => {\n        console.log(2)\n        setRunningState(newCurrency)\n    }\n    return(\n        <Form\n        {...layout}\n        onFinish={onFinish}\n        >\n            <Form.Item\n            label=\"脚本编号\"\n            name=\"scriptCode\"\n            rules={[{ message: 'Please input your username!' }]}\n            >\n                <Input placeholder=\"请输入脚本编号\"/>\n            </Form.Item>\n            <Form.Item\n            label=\"运行结果:\"\n            name=\"theResults\"\n            rules={[{ message: 'Please input your username!' }]}\n            >\n                {/* <Input /> */}\n                <Select\n                defaultValue={theResults}\n                style={{\n                width: 80,\n                margin: '0 20px',\n                }}\n                onChange={onTheResultsChange}\n                >\n                    <Option value=\"正常\">正常</Option>\n                    <Option value=\"异常\">异常</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n            label=\"运行状态：\"\n            name={runningState}\n            rules={[{ message: 'Please input your username!' }]}\n            >\n                <Select\n                defaultValue=\"成功\"\n                style={{\n                width: 80,\n                margin: '0 20px',\n                }}\n                onChange={onRunningStateChange}\n                >\n                    <Option value=\"成功\">成功</Option>\n                    <Option value=\"失败\">失败</Option>\n                </Select>\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                搜索\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\n\n\nconst columns = [\n    {\n        title: '脚本编号',\n        dataIndex: 'scriptCode',\n        key: 'scriptCode',\n    },\n    {\n        title: '脚本名称',\n        dataIndex: 'scriptName',\n        key: 'scriptName',\n    },\n    {\n        title: '运行状态',\n        dataIndex: 'runningState',\n        key: 'runningState',\n    },\n    {\n        title: '运行结果',\n        dataIndex: 'theResults',\n        key: 'theResults',\n    },\n    {\n        title: \"上次运行时间\",\n        dataIndex: \"lastRunTime\",\n        key: \"lastRunTime\"\n    },\n    {\n        dataIndex: \"tunButton\",\n        key: \"tunButton\"\n    },\n    {\n        dataIndex: \"open\",\n        key: \"open\"\n    }\n];\n\nfunction AutomaticInvestment() {\n    const [ timeDomShow , setTimeDomShow ] = useState(false)\n    const [ dataSource , setDataSource] = useState([])\n\n    useEffect(() => {\n        setDataSource ([\n            {\n                key: '1',\n                scriptCode: '胡彦斌',\n                scriptName: 32,\n                runningState: '西湖区湖底公园1号',\n                theResults: \"成功\",\n                lastRunTime: \"11-0-1\",\n                tunButton: (<button onClick={(e)=>{\n                    e.stopPropagation()\n                }}>运行</button>),\n                open: (<button>打开</button>),\n                description: '这是脚本的详情'\n            },\n            {\n                key: '2',\n                scriptCode: '胡彦祖',\n                scriptName: 42,\n                runningState: '西湖区湖底公园1号',\n                theResults: \"成功\",\n                lastRunTime: \"11-0-1\",\n                tunButton: (<button onClick={(e)=>{\n                    e.stopPropagation()\n                }}>打开</button>),\n                open: (<button>运行</button>)\n            },\n        ]);\n    }, [dataSource]);\n    return (\n        <div>\n            <div className=\"prevStateShow\">\n                { \n                    timeDomShow \n                    ? (\n                        <div className=\"prevStateShow-children\">\n                            <div>上次运行时间</div>\n                            <div>11::43:54</div>\n                        </div>\n                    ) \n                    : null\n                }\n                <div className=\"prevStateShow-children\">\n                    <div>上次运行成功</div>\n                   <div>1</div>\n                </div>\n                <div className=\"prevStateShow-children\">\n                    <div>上次运行失败</div>\n                    <div>1</div>\n                </div>\n            </div>\n            <IFrom />\n\n            <Table\n                expandable={{\n                    expandRowByClick: true,\n                    expandedRowRender: record => (\n                        <div>{record.description}</div>\n                    ),\n                    rowExpandable: record => record.name !== 'Not Expandable',\n                    onExpandedRowsChange:()=>{\n                        setTimeDomShow(!timeDomShow)\n                    }\n                }}\n                dataSource={dataSource}\n                columns={columns} />\n        </div>\n\n    )\n}\n\nexport default AutomaticInvestment","/Users/bts/Desktop/工作区/cms/defi-admin/src/api/automaticInvestment.js",[],"/Users/bts/Desktop/工作区/cms/defi-admin/src/api/investment.js",[],"/Users/bts/Desktop/工作区/cms/defi-admin/src/utils/request.js",["71"],"//封装请求\n\nimport axios from \"axios\"\n\nconst request = axios.create({\n    baseURL:\"https://localhost:3001\"\n})\n\nexport default axios","/Users/bts/Desktop/工作区/cms/defi-admin/src/web3/web3.js",[],"/Users/bts/Desktop/工作区/cms/defi-admin/src/contractAPI/vaultApi.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":40,"column":74,"nodeType":"78","endLine":40,"endColumn":126},{"ruleId":"79","severity":1,"message":"80","line":12,"column":5,"nodeType":"81","messageId":"82","endLine":12,"endColumn":22},{"ruleId":"79","severity":1,"message":"83","line":13,"column":5,"nodeType":"81","messageId":"82","endLine":13,"endColumn":24},{"ruleId":"79","severity":1,"message":"84","line":24,"column":7,"nodeType":"81","messageId":"82","endLine":24,"endColumn":11},{"ruleId":"79","severity":1,"message":"85","line":58,"column":13,"nodeType":"81","messageId":"82","endLine":58,"endColumn":28},{"ruleId":"79","severity":1,"message":"86","line":58,"column":31,"nodeType":"81","messageId":"82","endLine":58,"endColumn":49},{"ruleId":"79","severity":1,"message":"87","line":67,"column":23,"nodeType":"81","messageId":"82","endLine":67,"endColumn":25},{"ruleId":"79","severity":1,"message":"88","line":5,"column":16,"nodeType":"81","messageId":"82","endLine":5,"endColumn":19},{"ruleId":"79","severity":1,"message":"89","line":5,"column":21,"nodeType":"81","messageId":"82","endLine":5,"endColumn":24},{"ruleId":"79","severity":1,"message":"90","line":10,"column":5,"nodeType":"81","messageId":"82","endLine":10,"endColumn":31},{"ruleId":"79","severity":1,"message":"91","line":11,"column":5,"nodeType":"81","messageId":"82","endLine":11,"endColumn":33},{"ruleId":"79","severity":1,"message":"92","line":5,"column":7,"nodeType":"81","messageId":"82","endLine":5,"endColumn":14},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'getInvestmentList' is defined but never used.","Identifier","unusedVar","'getInvestmentDetail' is defined but never used.","'text' is assigned a value but never used.","'nvestmentDetail' is assigned a value but never used.","'setNvestmentDetail' is assigned a value but never used.","'fn' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'getAutomaticInvestmentList' is defined but never used.","'getAutomaticInvestmentScript' is defined but never used.","'request' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]